name: Quick Test - Milestone Detection & Environment Setup

on:
  workflow_dispatch:
    inputs:
      webrtc_branch:
        description: 'WebRTC branch to test milestone detection'
        required: false
        default: 'branch-heads/7151'
        type: choice
        options:
          - 'branch-heads/7339'  # M140 (Latest)
          - 'branch-heads/7258'  # M139
          - 'branch-heads/7204'  # M138
          - 'branch-heads/7151'  # M137 (Default)
          - 'branch-heads/7103'  # M136
          - 'branch-heads/7000'  # M135
          - 'branch-heads/6845'  # M134

jobs:
  quick-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test Dynamic Milestone Detection
        run: |
          echo "🧪 Testing Dynamic Milestone Detection Logic"
          echo "================================================"
          
          BRANCH_INPUT="${{ github.event.inputs.webrtc_branch || 'branch-heads/7151' }}"
          echo "Input branch: $BRANCH_INPUT"
          
          # Extract branch number and determine milestone (same logic as action.yml)
          BRANCH_NUMBER=$(echo "$BRANCH_INPUT" | sed 's/.*branch-heads\///')
          echo "Branch number: $BRANCH_NUMBER"
          
          # Test Chromium Dash API availability
          echo ""
          echo "🌐 Testing Chromium Dash API connectivity..."
          if command -v curl >/dev/null 2>&1; then
            CHROMIUM_RESPONSE=$(curl -s --max-time 10 "https://chromiumdash.appspot.com/fetch_releases?num=5" || echo "")
            
            if [ -n "$CHROMIUM_RESPONSE" ] && echo "$CHROMIUM_RESPONSE" | grep -q "version"; then
              echo "✅ Chromium Dash API is accessible"
              echo "Sample response (first 200 chars): ${CHROMIUM_RESPONSE:0:200}..."
            else
              echo "⚠️  Chromium Dash API not accessible or invalid response"
            fi
          else
            echo "❌ curl not available"
          fi
          
          # Static milestone mapping (updated with accurate values)
          echo ""
          echo "🎯 Static Milestone Mapping Test:"
          if [ "$BRANCH_NUMBER" -ge 7339 ]; then
            MILESTONE="M140"
          elif [ "$BRANCH_NUMBER" -ge 7258 ]; then
            MILESTONE="M139"
          elif [ "$BRANCH_NUMBER" -ge 7204 ]; then
            MILESTONE="M138"
          elif [ "$BRANCH_NUMBER" -ge 7151 ]; then
            MILESTONE="M137"
          elif [ "$BRANCH_NUMBER" -ge 7103 ]; then
            MILESTONE="M136" 
          elif [ "$BRANCH_NUMBER" -ge 7000 ]; then
            MILESTONE="M135"
          elif [ "$BRANCH_NUMBER" -ge 6845 ]; then
            MILESTONE="M134"
          elif [ "$BRANCH_NUMBER" -ge 6723 ]; then
            MILESTONE="M133"
          else
            MILESTONE="M$((133 - (6723 - BRANCH_NUMBER) / 100))"
          fi
          
          echo "Detected milestone: $MILESTONE"
          
          # Expected AAR filename
          MILESTONE_LOWER=$(echo "$MILESTONE" | tr '[:upper:]' '[:lower:]')
          AAR_FILENAME="libwebrtc-${MILESTONE_LOWER}-123.aar"  # 123 as example run number
          echo "Expected AAR filename: $AAR_FILENAME"
          
          echo ""
          echo "✅ Milestone detection working correctly!"
          echo "================================================"
      
      - name: Test Environment Detection
        run: |
          echo "🔧 Environment Detection Test"
          echo "=============================="
          echo "OS: $(uname -a)"
          echo "Available tools:"
          echo "  - curl: $(command -v curl && echo '✅' || echo '❌')"
          echo "  - jq: $(command -v jq && echo '✅' || echo '❌')"
          echo "  - git: $(command -v git && echo '✅')"
          echo "  - python3: $(command -v python3 && echo '✅')"
          echo "  - node: $(command -v node && echo '✅' || echo '❌')"
          echo ""
          echo "Disk space:"
          df -h | head -5
          echo ""
          echo "Memory:"
          free -h || echo "N/A"
      
      - name: Generate Test Summary
        if: always()
        run: |
          echo "## 🧪 Quick Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Milestone Detection Test" >> $GITHUB_STEP_SUMMARY
          echo "- **Input Branch**: ${{ github.event.inputs.webrtc_branch || 'branch-heads/7151' }}" >> $GITHUB_STEP_SUMMARY
          
          BRANCH_NUMBER=$(echo "${{ github.event.inputs.webrtc_branch || 'branch-heads/7151' }}" | sed 's/.*branch-heads\///')
          if [ "$BRANCH_NUMBER" -ge 7339 ]; then
            MILESTONE="M140"
          elif [ "$BRANCH_NUMBER" -ge 7258 ]; then
            MILESTONE="M139"
          elif [ "$BRANCH_NUMBER" -ge 7204 ]; then
            MILESTONE="M138"
          elif [ "$BRANCH_NUMBER" -ge 7151 ]; then
            MILESTONE="M137"
          elif [ "$BRANCH_NUMBER" -ge 7103 ]; then
            MILESTONE="M136"
          elif [ "$BRANCH_NUMBER" -ge 7000 ]; then
            MILESTONE="M135"
          else
            MILESTONE="M134+"
          fi
          
          echo "- **Detected Milestone**: $MILESTONE" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch Number**: $BRANCH_NUMBER" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Environment Status" >> $GITHUB_STEP_SUMMARY
          echo "- **OS**: Ubuntu Latest" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Quick test completed successfully!**" >> $GITHUB_STEP_SUMMARY